{"ast":null,"code":"var _jsxFileName = \"/Users/jumo/Documents/SEIF-13-HW-Submission/unit_2/hw/week_10/James/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\nimport \"./App.css\";\nimport Column from \"./components/Column\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst titles = [\"What went well\", \"What can be improved\", \"Action items\"];\n// const items = [];\n\n// Task 1: Create initial state\nconst initialState = [{\n  // Code goes here\n}];\n\n// Task 2: Define reducer function\nfunction reducer(state, action) {\n  switch (action) {\n    // Code goes here\n    case titles[0]:\n      let itemPrompt = prompt(`Add item to \"${action}\" column.`, \"\");\n      console.info(\"itemPrompt >>> \", itemPrompt);\n      if (!!itemPrompt) {\n        state.items.push(itemPrompt);\n        console.info(\"state >>> \", state);\n      }\n      break;\n    case titles[1]:\n      window.prompt(`Add item to \"${action}\" column.`);\n      console.info(\"in case 1\");\n      break;\n    case titles[2]:\n      window.prompt(`Add item to \"${action}\" column.`);\n      console.info(\"in case 2\");\n      break;\n    default:\n      return state;\n  }\n}\nfunction App() {\n  _s();\n  // Task 3: Set up state with the use reducer hook\n  // code goes here\n  const [item, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Retrospective Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns\",\n      children: titles.map((title, index) => /*#__PURE__*/_jsxDEV(Column, {\n        title: title,\n        dispatch: dispatch\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KqcHR6gvAqSOZxX/es/wKOzKa8U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useReducer","Column","jsxDEV","_jsxDEV","titles","initialState","reducer","state","action","itemPrompt","prompt","console","info","items","push","window","App","_s","item","dispatch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","title","index","_c","$RefreshReg$"],"sources":["/Users/jumo/Documents/SEIF-13-HW-Submission/unit_2/hw/week_10/James/src/App.js"],"sourcesContent":["import React, { useReducer } from \"react\";\nimport \"./App.css\";\nimport Column from \"./components/Column\";\n\nconst titles = [\"What went well\", \"What can be improved\", \"Action items\"];\n// const items = [];\n\n// Task 1: Create initial state\nconst initialState = [\n  {\n  // Code goes here\n}];\n\n// Task 2: Define reducer function\nfunction reducer(state, action) {\n  switch (action) {\n    // Code goes here\n    case titles[0]:\n      let itemPrompt = prompt(`Add item to \"${action}\" column.`, \"\");\n      console.info(\"itemPrompt >>> \", itemPrompt); \n      if(!!itemPrompt ) {\n        state.items.push(itemPrompt);\n        console.info(\"state >>> \", state); \n      }\n      break;\n\n    case titles[1]:\n      window.prompt(`Add item to \"${action}\" column.`);\n      console.info(\"in case 1\");\n      break;\n\n    case titles[2]:\n      window.prompt(`Add item to \"${action}\" column.`);\n      console.info(\"in case 2\");\n      break;\n\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  // Task 3: Set up state with the use reducer hook\n  // code goes here\n  const [item, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <div className=\"App\">\n      <h1>Retrospective Board</h1>\n      <div className=\"columns\">\n        {/* Task 4: Render column components and pass state,dispatch down */}\n        {/* Code goes here*/}\n        {titles.map((title, index) => (\n          <Column key={index} title={title} dispatch={dispatch} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,MAAM,GAAG,CAAC,gBAAgB,EAAE,sBAAsB,EAAE,cAAc,CAAC;AACzE;;AAEA;AACA,MAAMC,YAAY,GAAG,CACnB;EACA;AAAA,CACD,CAAC;;AAEF;AACA,SAASC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAC9B,QAAQA,MAAM;IACZ;IACA,KAAKJ,MAAM,CAAC,CAAC,CAAC;MACZ,IAAIK,UAAU,GAAGC,MAAM,CAAE,gBAAeF,MAAO,WAAU,EAAE,EAAE,CAAC;MAC9DG,OAAO,CAACC,IAAI,CAAC,iBAAiB,EAAEH,UAAU,CAAC;MAC3C,IAAG,CAAC,CAACA,UAAU,EAAG;QAChBF,KAAK,CAACM,KAAK,CAACC,IAAI,CAACL,UAAU,CAAC;QAC5BE,OAAO,CAACC,IAAI,CAAC,YAAY,EAAEL,KAAK,CAAC;MACnC;MACA;IAEF,KAAKH,MAAM,CAAC,CAAC,CAAC;MACZW,MAAM,CAACL,MAAM,CAAE,gBAAeF,MAAO,WAAU,CAAC;MAChDG,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;MACzB;IAEF,KAAKR,MAAM,CAAC,CAAC,CAAC;MACZW,MAAM,CAACL,MAAM,CAAE,gBAAeF,MAAO,WAAU,CAAC;MAChDG,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;MACzB;IAEF;MACE,OAAOL,KAAK;EAChB;AACF;AAEA,SAASS,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;EACA,MAAM,CAACC,IAAI,EAAEC,QAAQ,CAAC,GAAGnB,UAAU,CAACM,OAAO,EAAED,YAAY,CAAC;EAE1D,oBACEF,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlB,OAAA;MAAAkB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BtB,OAAA;MAAKiB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAGrBjB,MAAM,CAACsB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBzB,OAAA,CAACF,MAAM;QAAa0B,KAAK,EAAEA,KAAM;QAACR,QAAQ,EAAEA;MAAS,GAAxCS,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqC,CACxD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACR,EAAA,CAjBQD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAmBZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}